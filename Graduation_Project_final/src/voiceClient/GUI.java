package voiceClient;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;

import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.TargetDataLine;
import javax.swing.JPanel;

import comm.SoundPacket;
import comm.Utils;

/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author dosse
 */
public class GUI extends JPanel {
	private MicTester micTester;

	// this class is used to test the microphone. it manages the volume meter
	private class MicTester extends Thread {
		private TargetDataLine mic = null;

		public MicTester() {

		}

		@Override
		public void run() {

			try {
				AudioFormat af = SoundPacket.defaultFormat;
				DataLine.Info info = new DataLine.Info(TargetDataLine.class, null);
				mic = (TargetDataLine) (AudioSystem.getLine(info));
				mic.open(af);
				mic.start();
			} catch (Exception e) {
				//JOptionPane.showMessageDialog(this.rootPane, "Microphone not detected.\nPress OK to close this program",
				//		"Error", JOptionPane.ERROR_MESSAGE);
				System.exit(0);
			}
			for (;;) {
				Utils.sleep(10);
				if (mic.available() > 0) {
					byte[] buff = new byte[SoundPacket.defaultDataLenght];
					mic.read(buff, 0, buff.length);
					long tot = 0;
					for (int i = 0; i < buff.length; i++)
						tot += MicThread.amplification * Math.abs(buff[i]);
					tot *= 2.5;
					tot /= buff.length;
					micLev.setValue((int) tot);
				}
			}
		}

		private void close() {
			if (mic != null)
				mic.close();
			stop();
		}
	}

	/**
	 * Creates new form GUI
	 */
	public GUI() {
		initComponents();
		micTester = new MicTester();
		micTester.start();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		ip = new javax.swing.JTextField();
		start = new javax.swing.JButton();
		port = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		micLev = new javax.swing.JProgressBar();
		jLabel2 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		micVol = new javax.swing.JSlider();

		JPanel panel1 = new JPanel();
		panel1.setLayout(new FlowLayout());
		
		JPanel panel2 = new JPanel();
		panel2.setLayout(new GridLayout(2,2));

		//setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		//setResizable(false);

		ip.setText("127.0.0.1");

		start.setText("Connect");
		start.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				startActionPerformed(evt);
			}
		});

		port.setText("1049");

		jLabel1.setText("Server IP and port");

		jLabel3.setText("Mic level");

		jLabel2.setText("If the mic level doesn't move as you speak, the mic volume is too low");

		jLabel4.setText("Mic volume");

		micVol.setMaximum(300);
		micVol.setMinimum(50);
		micVol.setValue(100);
		micVol.addChangeListener(new javax.swing.event.ChangeListener() {
			public void stateChanged(javax.swing.event.ChangeEvent evt) {
				micVolStateChanged(evt);
			}
		});
		setVisible(true);
		
		setLayout(new BorderLayout());
		panel1.add(jLabel1);
		panel1.add(ip);
		panel1.add(port);
		
		panel2.add(jLabel3);
		panel2.add(micLev);
		panel2.add(jLabel4);
		panel2.add(micVol);
		add(panel1,BorderLayout.NORTH);
		add(start,BorderLayout.CENTER);
		add(panel2,BorderLayout.SOUTH);
		
		
	}// </editor-fold>//GEN-END:initComponents

	private void startActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_startActionPerformed
		try {
			new Client(ip.getText(), Integer.parseInt(port.getText())).start(); // connect to specified server at
																				// specified port
		} catch (Exception ex) { // connection failed
			//JOptionPane.showMessageDialog(rootPane, ex, "Error", JOptionPane.ERROR_MESSAGE);
			return;
		}
		// connected, disable buttons
		micTester.close();
		ip.setEnabled(false);
		port.setEnabled(false);
		start.setEnabled(false);
		micLev.setVisible(false);
		jLabel1.setEnabled(false);
		jLabel3.setVisible(false);
		micVol.setVisible(false);
		jLabel4.setVisible(false);
		jLabel2.setVisible(false);
		setSize(getWidth(), getHeight() - 75);
	}// GEN-LAST:event_startActionPerformed

	private void micVolStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_micVolStateChanged
		MicThread.amplification = ((double) (micVol.getValue())) / 100.0;
	}// GEN-LAST:event_micVolStateChanged

	/**
	 * @param args the command line arguments
	 */
	// public static void main(String args[]) {
	/*
	 * Set the Nimbus look and feel
	 */
	// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
	// (optional) ">
	/*
	 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
	 * look and feel. For details see
	 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
	 */
	// try {
	// for (javax.swing.UIManager.LookAndFeelInfo info :
	// javax.swing.UIManager.getInstalledLookAndFeels()) {
	// if ("Nimbus".equals(info.getName())) {
	// javax.swing.UIManager.setLookAndFeel(info.getClassName());
	// break;
	// }
	// }
	// } catch (ClassNotFoundException ex) {
	// java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE,
	// null, ex);
	// } catch (InstantiationException ex) {
	// java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE,
	// null, ex);
	// } catch (IllegalAccessException ex) {
	// java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE,
	// null, ex);
	// } catch (javax.swing.UnsupportedLookAndFeelException ex) {
	// java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE,
	// null, ex);
	// }
	// </editor-fold>

	/*
	 * Create and display the form
	 */
	// java.awt.EventQueue.invokeLater(new Runnable() {

	// @Override
	// public void run() {
	// new GUI().setVisible(true);
	// }
	// });
	// }
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JTextField ip;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JProgressBar micLev;
	private javax.swing.JSlider micVol;
	private javax.swing.JTextField port;
	private javax.swing.JButton start;
	// End of variables declaration//GEN-END:variables
}
